// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model.proto

package org.testchimp.model;

/**
 * <pre>
 * Represents an arbitrary payload of requests / responses.
 * </pre>
 *
 * Protobuf type {@code org.testchimp.model.Payload}
 */
public final class Payload extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:org.testchimp.model.Payload)
    PayloadOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Payload.newBuilder() to construct.
  private Payload(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Payload() {
    spanId_ = "";
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new Payload();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.testchimp.model.Model.internal_static_org_testchimp_model_Payload_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.testchimp.model.Model.internal_static_org_testchimp_model_Payload_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.testchimp.model.Payload.class, org.testchimp.model.Payload.Builder.class);
  }

  private int bitField0_;
  private int payloadCase_ = 0;
  private java.lang.Object payload_;
  public enum PayloadCase
      implements com.google.protobuf.Internal.EnumLite,
          com.google.protobuf.AbstractMessage.InternalOneOfEnum {
    HTTP_PAYLOAD(2),
    PAYLOAD_NOT_SET(0);
    private final int value;
    private PayloadCase(int value) {
      this.value = value;
    }
    /**
     * @param value The number of the enum to look for.
     * @return The enum associated with the given number.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PayloadCase valueOf(int value) {
      return forNumber(value);
    }

    public static PayloadCase forNumber(int value) {
      switch (value) {
        case 2: return HTTP_PAYLOAD;
        case 0: return PAYLOAD_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public PayloadCase
  getPayloadCase() {
    return PayloadCase.forNumber(
        payloadCase_);
  }

  public static final int SPAN_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object spanId_;
  /**
   * <pre>
   * Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
   * </pre>
   *
   * <code>optional string span_id = 1;</code>
   * @return Whether the spanId field is set.
   */
  @java.lang.Override
  public boolean hasSpanId() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
   * </pre>
   *
   * <code>optional string span_id = 1;</code>
   * @return The spanId.
   */
  @java.lang.Override
  public java.lang.String getSpanId() {
    java.lang.Object ref = spanId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      spanId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
   * </pre>
   *
   * <code>optional string span_id = 1;</code>
   * @return The bytes for spanId.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getSpanIdBytes() {
    java.lang.Object ref = spanId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      spanId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HTTP_PAYLOAD_FIELD_NUMBER = 2;
  /**
   * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
   * @return Whether the httpPayload field is set.
   */
  @java.lang.Override
  public boolean hasHttpPayload() {
    return payloadCase_ == 2;
  }
  /**
   * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
   * @return The httpPayload.
   */
  @java.lang.Override
  public org.testchimp.model.HttpPayload getHttpPayload() {
    if (payloadCase_ == 2) {
       return (org.testchimp.model.HttpPayload) payload_;
    }
    return org.testchimp.model.HttpPayload.getDefaultInstance();
  }
  /**
   * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
   */
  @java.lang.Override
  public org.testchimp.model.HttpPayloadOrBuilder getHttpPayloadOrBuilder() {
    if (payloadCase_ == 2) {
       return (org.testchimp.model.HttpPayload) payload_;
    }
    return org.testchimp.model.HttpPayload.getDefaultInstance();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, spanId_);
    }
    if (payloadCase_ == 2) {
      output.writeMessage(2, (org.testchimp.model.HttpPayload) payload_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, spanId_);
    }
    if (payloadCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.testchimp.model.HttpPayload) payload_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.testchimp.model.Payload)) {
      return super.equals(obj);
    }
    org.testchimp.model.Payload other = (org.testchimp.model.Payload) obj;

    if (hasSpanId() != other.hasSpanId()) return false;
    if (hasSpanId()) {
      if (!getSpanId()
          .equals(other.getSpanId())) return false;
    }
    if (!getPayloadCase().equals(other.getPayloadCase())) return false;
    switch (payloadCase_) {
      case 2:
        if (!getHttpPayload()
            .equals(other.getHttpPayload())) return false;
        break;
      case 0:
      default:
    }
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSpanId()) {
      hash = (37 * hash) + SPAN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSpanId().hashCode();
    }
    switch (payloadCase_) {
      case 2:
        hash = (37 * hash) + HTTP_PAYLOAD_FIELD_NUMBER;
        hash = (53 * hash) + getHttpPayload().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.testchimp.model.Payload parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.testchimp.model.Payload parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.testchimp.model.Payload parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.testchimp.model.Payload parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.testchimp.model.Payload parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.testchimp.model.Payload parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.testchimp.model.Payload parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.testchimp.model.Payload parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.testchimp.model.Payload parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.testchimp.model.Payload parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.testchimp.model.Payload parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.testchimp.model.Payload parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.testchimp.model.Payload prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Represents an arbitrary payload of requests / responses.
   * </pre>
   *
   * Protobuf type {@code org.testchimp.model.Payload}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:org.testchimp.model.Payload)
      org.testchimp.model.PayloadOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.testchimp.model.Model.internal_static_org_testchimp_model_Payload_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.testchimp.model.Model.internal_static_org_testchimp_model_Payload_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.testchimp.model.Payload.class, org.testchimp.model.Payload.Builder.class);
    }

    // Construct using org.testchimp.model.Payload.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      spanId_ = "";
      bitField0_ = (bitField0_ & ~0x00000001);
      if (httpPayloadBuilder_ != null) {
        httpPayloadBuilder_.clear();
      }
      payloadCase_ = 0;
      payload_ = null;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.testchimp.model.Model.internal_static_org_testchimp_model_Payload_descriptor;
    }

    @java.lang.Override
    public org.testchimp.model.Payload getDefaultInstanceForType() {
      return org.testchimp.model.Payload.getDefaultInstance();
    }

    @java.lang.Override
    public org.testchimp.model.Payload build() {
      org.testchimp.model.Payload result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public org.testchimp.model.Payload buildPartial() {
      org.testchimp.model.Payload result = new org.testchimp.model.Payload(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        to_bitField0_ |= 0x00000001;
      }
      result.spanId_ = spanId_;
      if (payloadCase_ == 2) {
        if (httpPayloadBuilder_ == null) {
          result.payload_ = payload_;
        } else {
          result.payload_ = httpPayloadBuilder_.build();
        }
      }
      result.bitField0_ = to_bitField0_;
      result.payloadCase_ = payloadCase_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.testchimp.model.Payload) {
        return mergeFrom((org.testchimp.model.Payload)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.testchimp.model.Payload other) {
      if (other == org.testchimp.model.Payload.getDefaultInstance()) return this;
      if (other.hasSpanId()) {
        bitField0_ |= 0x00000001;
        spanId_ = other.spanId_;
        onChanged();
      }
      switch (other.getPayloadCase()) {
        case HTTP_PAYLOAD: {
          mergeHttpPayload(other.getHttpPayload());
          break;
        }
        case PAYLOAD_NOT_SET: {
          break;
        }
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              spanId_ = input.readStringRequireUtf8();
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              input.readMessage(
                  getHttpPayloadFieldBuilder().getBuilder(),
                  extensionRegistry);
              payloadCase_ = 2;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public PayloadCase
        getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    public Builder clearPayload() {
      payloadCase_ = 0;
      payload_ = null;
      onChanged();
      return this;
    }

    private int bitField0_;

    private java.lang.Object spanId_ = "";
    /**
     * <pre>
     * Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
     * </pre>
     *
     * <code>optional string span_id = 1;</code>
     * @return Whether the spanId field is set.
     */
    public boolean hasSpanId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
     * </pre>
     *
     * <code>optional string span_id = 1;</code>
     * @return The spanId.
     */
    public java.lang.String getSpanId() {
      java.lang.Object ref = spanId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        spanId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
     * </pre>
     *
     * <code>optional string span_id = 1;</code>
     * @return The bytes for spanId.
     */
    public com.google.protobuf.ByteString
        getSpanIdBytes() {
      java.lang.Object ref = spanId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        spanId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
     * </pre>
     *
     * <code>optional string span_id = 1;</code>
     * @param value The spanId to set.
     * @return This builder for chaining.
     */
    public Builder setSpanId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      spanId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
     * </pre>
     *
     * <code>optional string span_id = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearSpanId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      spanId_ = getDefaultInstance().getSpanId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Span ID corresponding to the payload. This is used for correlating requests with corresponding responses.
     * </pre>
     *
     * <code>optional string span_id = 1;</code>
     * @param value The bytes for spanId to set.
     * @return This builder for chaining.
     */
    public Builder setSpanIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      bitField0_ |= 0x00000001;
      spanId_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.testchimp.model.HttpPayload, org.testchimp.model.HttpPayload.Builder, org.testchimp.model.HttpPayloadOrBuilder> httpPayloadBuilder_;
    /**
     * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
     * @return Whether the httpPayload field is set.
     */
    @java.lang.Override
    public boolean hasHttpPayload() {
      return payloadCase_ == 2;
    }
    /**
     * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
     * @return The httpPayload.
     */
    @java.lang.Override
    public org.testchimp.model.HttpPayload getHttpPayload() {
      if (httpPayloadBuilder_ == null) {
        if (payloadCase_ == 2) {
          return (org.testchimp.model.HttpPayload) payload_;
        }
        return org.testchimp.model.HttpPayload.getDefaultInstance();
      } else {
        if (payloadCase_ == 2) {
          return httpPayloadBuilder_.getMessage();
        }
        return org.testchimp.model.HttpPayload.getDefaultInstance();
      }
    }
    /**
     * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
     */
    public Builder setHttpPayload(org.testchimp.model.HttpPayload value) {
      if (httpPayloadBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        payload_ = value;
        onChanged();
      } else {
        httpPayloadBuilder_.setMessage(value);
      }
      payloadCase_ = 2;
      return this;
    }
    /**
     * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
     */
    public Builder setHttpPayload(
        org.testchimp.model.HttpPayload.Builder builderForValue) {
      if (httpPayloadBuilder_ == null) {
        payload_ = builderForValue.build();
        onChanged();
      } else {
        httpPayloadBuilder_.setMessage(builderForValue.build());
      }
      payloadCase_ = 2;
      return this;
    }
    /**
     * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
     */
    public Builder mergeHttpPayload(org.testchimp.model.HttpPayload value) {
      if (httpPayloadBuilder_ == null) {
        if (payloadCase_ == 2 &&
            payload_ != org.testchimp.model.HttpPayload.getDefaultInstance()) {
          payload_ = org.testchimp.model.HttpPayload.newBuilder((org.testchimp.model.HttpPayload) payload_)
              .mergeFrom(value).buildPartial();
        } else {
          payload_ = value;
        }
        onChanged();
      } else {
        if (payloadCase_ == 2) {
          httpPayloadBuilder_.mergeFrom(value);
        } else {
          httpPayloadBuilder_.setMessage(value);
        }
      }
      payloadCase_ = 2;
      return this;
    }
    /**
     * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
     */
    public Builder clearHttpPayload() {
      if (httpPayloadBuilder_ == null) {
        if (payloadCase_ == 2) {
          payloadCase_ = 0;
          payload_ = null;
          onChanged();
        }
      } else {
        if (payloadCase_ == 2) {
          payloadCase_ = 0;
          payload_ = null;
        }
        httpPayloadBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
     */
    public org.testchimp.model.HttpPayload.Builder getHttpPayloadBuilder() {
      return getHttpPayloadFieldBuilder().getBuilder();
    }
    /**
     * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
     */
    @java.lang.Override
    public org.testchimp.model.HttpPayloadOrBuilder getHttpPayloadOrBuilder() {
      if ((payloadCase_ == 2) && (httpPayloadBuilder_ != null)) {
        return httpPayloadBuilder_.getMessageOrBuilder();
      } else {
        if (payloadCase_ == 2) {
          return (org.testchimp.model.HttpPayload) payload_;
        }
        return org.testchimp.model.HttpPayload.getDefaultInstance();
      }
    }
    /**
     * <code>.org.testchimp.model.HttpPayload http_payload = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.testchimp.model.HttpPayload, org.testchimp.model.HttpPayload.Builder, org.testchimp.model.HttpPayloadOrBuilder> 
        getHttpPayloadFieldBuilder() {
      if (httpPayloadBuilder_ == null) {
        if (!(payloadCase_ == 2)) {
          payload_ = org.testchimp.model.HttpPayload.getDefaultInstance();
        }
        httpPayloadBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.testchimp.model.HttpPayload, org.testchimp.model.HttpPayload.Builder, org.testchimp.model.HttpPayloadOrBuilder>(
                (org.testchimp.model.HttpPayload) payload_,
                getParentForChildren(),
                isClean());
        payload_ = null;
      }
      payloadCase_ = 2;
      onChanged();;
      return httpPayloadBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:org.testchimp.model.Payload)
  }

  // @@protoc_insertion_point(class_scope:org.testchimp.model.Payload)
  private static final org.testchimp.model.Payload DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.testchimp.model.Payload();
  }

  public static org.testchimp.model.Payload getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Payload>
      PARSER = new com.google.protobuf.AbstractParser<Payload>() {
    @java.lang.Override
    public Payload parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<Payload> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Payload> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public org.testchimp.model.Payload getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

